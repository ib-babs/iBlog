@using Humanizer
@model BlogModel
@{
    ViewData["Title"] = @Model.Title;
    ViewData["show-edit-delete-btn"] = true;
    ViewData["show-view-btn"] = true;
}
<style>
    a {
        color: #6119bf;
    }

</style>
<div style="display:grid; margin: auto; max-width:700px">
    <div class="card border-0 mt-5">
        <div class="card-header text-center mb-3" style="background:none">
            <p class="display-6" style="font-weight:700">@Model.Title</p>
            <div class="d-flex align-items-center pb-2 pt-2 gap-3 text-center border">
                <div class="user-details">
                    <img src="https://cdn.builder.io/api/v1/image/assets/TEMP/d36ea9b2ff12b191b01b86abf793f36575ecbcacefae50beac8362b2659b3c4a?placeholderIfAbsent=true&apiKey=be9dd76967b54f6f9d2e8ebdbf61012b" alt="User avatar" class="user-avatar" />
                <a asp-page="/Account/Profile" asp-route-userId="@Model.AuthorId" class="username"><b>@Model.Author.UserName</b></a>
                </div>
                |
                <span>@Model.CreatedAt.Humanize()</span> | <span>@Model.Category</span>
            </div>
        </div>
        <div class="card-body mb-2">
            <img class="card-img-top mb-2" alt="card-img" src="@Model.ImageUrlPath" loading="lazy" />
            <p style="white-space: pre-wrap; text-justify:auto;" id="blog-content">@Model.Content.Trim()</p>
        </div>
        @if (User != null && User.Identity != null)
        {
            @if ((User.Identity.IsAuthenticated && User.Identity.Name == Model.Author.UserName)|| User.IsInRole("Admin"))
            {
                <div class="card-footer">
                    <a asp-action="EditBlog" asp-controller="Blog" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
                    <a asp-action="DeleteBlog" asp-controller="Blog" asp-route-id="@Model.Id" class="btn btn-danger">Delete</a>
                </div>
            }
            else
            {
                <hr />
            }
        }
        else
        {
            <hr />
        }

    </div>


    @if (Model.Author.Posts != null && Model.Author.Posts.Count() > 1)
    {
        <br />

        <p class="text-muted text-center" style="margin-bottom: -2em">More posts from <b>@Model.Author.UserName</b></p>
        <main class="blog-grid">
            @foreach (var blog in Model.Author.Posts.SkipWhile(b => b.Id == Model.Id).Take(4))
            {
                <partial name="_BlogView" model="blog" />
            }
        </main>
    }
    @*
    @if (Model.Author.Posts != null && Model.Author.Posts.Count() > 1)
    {
    <div class="mt-3">
    <p class="text-muted">More posts from <b>@Model.Author.UserName</b></p>
    <div class="row">
    @foreach (var blog in Model.Author.Posts.SkipWhile(b => b.Id == Model.Id).Take(4))
    {
    <div class="col-md-5 d-grid align-items-stretch">
    <partial name="_BlogView" model="blog" />
    </div>
    }
    </div>
    </div>
    }
    *@
</div>
<script async type="module" src="~/js/GetBlog.js">
</script>